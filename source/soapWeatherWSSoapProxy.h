/* soapWeatherWSSoapProxy.h
   Generated by gSOAP 2.8.70 for weather.h

gSOAP XML Web services tools
Copyright (C) 2000-2018, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapWeatherWSSoapProxy_H
#define soapWeatherWSSoapProxy_H
#include "soapH.h"

    class SOAP_CMAC WeatherWSSoapProxy : public soap {
      public:
        /// Endpoint URL of service 'WeatherWSSoapProxy' (change as needed)
        const char *soap_endpoint;
        /// Variables globally declared in weather.h, if any
        /// Construct a proxy with new managing context
        WeatherWSSoapProxy();
        /// Copy constructor
        WeatherWSSoapProxy(const WeatherWSSoapProxy& rhs);
        /// Construct proxy given a managing context
        WeatherWSSoapProxy(const struct soap&);
        /// Construct proxy given a managing context and endpoint URL
        WeatherWSSoapProxy(const struct soap&, const char *endpoint);
        /// Constructor taking an endpoint URL
        WeatherWSSoapProxy(const char *endpoint);
        /// Constructor taking input and output mode flags for the new managing context
        WeatherWSSoapProxy(soap_mode iomode);
        /// Constructor taking endpoint URL and input and output mode flags for the new managing context
        WeatherWSSoapProxy(const char *endpoint, soap_mode iomode);
        /// Constructor taking input and output mode flags for the new managing context
        WeatherWSSoapProxy(soap_mode imode, soap_mode omode);
        /// Destructor deletes deserialized data and managing context
        virtual ~WeatherWSSoapProxy();
        /// Initializer used by constructors
        virtual void WeatherWSSoapProxy_init(soap_mode imode, soap_mode omode);
        /// Return a copy that has a new managing context with the same engine state
        virtual WeatherWSSoapProxy *copy();
        /// Copy assignment
        WeatherWSSoapProxy& operator=(const WeatherWSSoapProxy&);
        /// Delete all deserialized data (uses soap_destroy() and soap_end())
        virtual void destroy();
        /// Delete all deserialized data and reset to default
        virtual void reset();
        /// Disables and removes SOAP Header from message by setting soap->header = NULL
        virtual void soap_noheader();
        /// Get SOAP Header structure (i.e. soap->header, which is NULL when absent)
        virtual ::SOAP_ENV__Header *soap_header();
        /// Get SOAP Fault structure (i.e. soap->fault, which is NULL when absent)
        virtual ::SOAP_ENV__Fault *soap_fault();
        /// Get SOAP Fault string (NULL when absent)
        virtual const char *soap_fault_string();
        /// Get SOAP Fault detail as string (NULL when absent)
        virtual const char *soap_fault_detail();
        /// Close connection (normally automatic, except for send_X ops)
        virtual int soap_close_socket();
        /// Force close connection (can kill a thread blocked on IO)
        virtual int soap_force_close_socket();
        /// Print fault
        virtual void soap_print_fault(FILE*);
    #ifndef WITH_LEAN
    #ifndef WITH_COMPAT
        /// Print fault to stream
        virtual void soap_stream_fault(std::ostream&);
    #endif
        /// Write fault to buffer
        virtual char *soap_sprint_fault(char *buf, size_t len);
    #endif
        /// Web service operation 'getRegionDataset' (returns SOAP_OK or error code)
        virtual int getRegionDataset(_ns1__getRegionDataset *ns1__getRegionDataset, _ns1__getRegionDatasetResponse &ns1__getRegionDatasetResponse)
        { return this->getRegionDataset(NULL, NULL, ns1__getRegionDataset, ns1__getRegionDatasetResponse); }
        virtual int getRegionDataset(const char *soap_endpoint, const char *soap_action, _ns1__getRegionDataset *ns1__getRegionDataset, _ns1__getRegionDatasetResponse &ns1__getRegionDatasetResponse);
        /// Web service operation 'getRegionProvince' (returns SOAP_OK or error code)
        virtual int getRegionProvince(_ns1__getRegionProvince *ns1__getRegionProvince, _ns1__getRegionProvinceResponse &ns1__getRegionProvinceResponse)
        { return this->getRegionProvince(NULL, NULL, ns1__getRegionProvince, ns1__getRegionProvinceResponse); }
        virtual int getRegionProvince(const char *soap_endpoint, const char *soap_action, _ns1__getRegionProvince *ns1__getRegionProvince, _ns1__getRegionProvinceResponse &ns1__getRegionProvinceResponse);
        /// Web service operation 'getRegionCountry' (returns SOAP_OK or error code)
        virtual int getRegionCountry(_ns1__getRegionCountry *ns1__getRegionCountry, _ns1__getRegionCountryResponse &ns1__getRegionCountryResponse)
        { return this->getRegionCountry(NULL, NULL, ns1__getRegionCountry, ns1__getRegionCountryResponse); }
        virtual int getRegionCountry(const char *soap_endpoint, const char *soap_action, _ns1__getRegionCountry *ns1__getRegionCountry, _ns1__getRegionCountryResponse &ns1__getRegionCountryResponse);
        /// Web service operation 'getSupportCityDataset' (returns SOAP_OK or error code)
        virtual int getSupportCityDataset(_ns1__getSupportCityDataset *ns1__getSupportCityDataset, _ns1__getSupportCityDatasetResponse &ns1__getSupportCityDatasetResponse)
        { return this->getSupportCityDataset(NULL, NULL, ns1__getSupportCityDataset, ns1__getSupportCityDatasetResponse); }
        virtual int getSupportCityDataset(const char *soap_endpoint, const char *soap_action, _ns1__getSupportCityDataset *ns1__getSupportCityDataset, _ns1__getSupportCityDatasetResponse &ns1__getSupportCityDatasetResponse);
        /// Web service operation 'getSupportCityString' (returns SOAP_OK or error code)
        virtual int getSupportCityString(_ns1__getSupportCityString *ns1__getSupportCityString, _ns1__getSupportCityStringResponse &ns1__getSupportCityStringResponse)
        { return this->getSupportCityString(NULL, NULL, ns1__getSupportCityString, ns1__getSupportCityStringResponse); }
        virtual int getSupportCityString(const char *soap_endpoint, const char *soap_action, _ns1__getSupportCityString *ns1__getSupportCityString, _ns1__getSupportCityStringResponse &ns1__getSupportCityStringResponse);
        /// Web service operation 'getWeather' (returns SOAP_OK or error code)
        virtual int getWeather(_ns1__getWeather *ns1__getWeather, _ns1__getWeatherResponse &ns1__getWeatherResponse)
        { return this->getWeather(NULL, NULL, ns1__getWeather, ns1__getWeatherResponse); }
        virtual int getWeather(const char *soap_endpoint, const char *soap_action, _ns1__getWeather *ns1__getWeather, _ns1__getWeatherResponse &ns1__getWeatherResponse);
        /// Web service operation 'getRegionDataset' (returns SOAP_OK or error code)
        virtual int getRegionDataset_(_ns1__getRegionDataset *ns1__getRegionDataset, _ns1__getRegionDatasetResponse &ns1__getRegionDatasetResponse)
        { return this->getRegionDataset_(NULL, NULL, ns1__getRegionDataset, ns1__getRegionDatasetResponse); }
        virtual int getRegionDataset_(const char *soap_endpoint, const char *soap_action, _ns1__getRegionDataset *ns1__getRegionDataset, _ns1__getRegionDatasetResponse &ns1__getRegionDatasetResponse);
        /// Web service operation 'getRegionProvince' (returns SOAP_OK or error code)
        virtual int getRegionProvince_(_ns1__getRegionProvince *ns1__getRegionProvince, _ns1__getRegionProvinceResponse &ns1__getRegionProvinceResponse)
        { return this->getRegionProvince_(NULL, NULL, ns1__getRegionProvince, ns1__getRegionProvinceResponse); }
        virtual int getRegionProvince_(const char *soap_endpoint, const char *soap_action, _ns1__getRegionProvince *ns1__getRegionProvince, _ns1__getRegionProvinceResponse &ns1__getRegionProvinceResponse);
        /// Web service operation 'getRegionCountry' (returns SOAP_OK or error code)
        virtual int getRegionCountry_(_ns1__getRegionCountry *ns1__getRegionCountry, _ns1__getRegionCountryResponse &ns1__getRegionCountryResponse)
        { return this->getRegionCountry_(NULL, NULL, ns1__getRegionCountry, ns1__getRegionCountryResponse); }
        virtual int getRegionCountry_(const char *soap_endpoint, const char *soap_action, _ns1__getRegionCountry *ns1__getRegionCountry, _ns1__getRegionCountryResponse &ns1__getRegionCountryResponse);
        /// Web service operation 'getSupportCityDataset' (returns SOAP_OK or error code)
        virtual int getSupportCityDataset_(_ns1__getSupportCityDataset *ns1__getSupportCityDataset, _ns1__getSupportCityDatasetResponse &ns1__getSupportCityDatasetResponse)
        { return this->getSupportCityDataset_(NULL, NULL, ns1__getSupportCityDataset, ns1__getSupportCityDatasetResponse); }
        virtual int getSupportCityDataset_(const char *soap_endpoint, const char *soap_action, _ns1__getSupportCityDataset *ns1__getSupportCityDataset, _ns1__getSupportCityDatasetResponse &ns1__getSupportCityDatasetResponse);
        /// Web service operation 'getSupportCityString' (returns SOAP_OK or error code)
        virtual int getSupportCityString_(_ns1__getSupportCityString *ns1__getSupportCityString, _ns1__getSupportCityStringResponse &ns1__getSupportCityStringResponse)
        { return this->getSupportCityString_(NULL, NULL, ns1__getSupportCityString, ns1__getSupportCityStringResponse); }
        virtual int getSupportCityString_(const char *soap_endpoint, const char *soap_action, _ns1__getSupportCityString *ns1__getSupportCityString, _ns1__getSupportCityStringResponse &ns1__getSupportCityStringResponse);
        /// Web service operation 'getWeather' (returns SOAP_OK or error code)
        virtual int getWeather_(_ns1__getWeather *ns1__getWeather, _ns1__getWeatherResponse &ns1__getWeatherResponse)
        { return this->getWeather_(NULL, NULL, ns1__getWeather, ns1__getWeatherResponse); }
        virtual int getWeather_(const char *soap_endpoint, const char *soap_action, _ns1__getWeather *ns1__getWeather, _ns1__getWeatherResponse &ns1__getWeatherResponse);
    };
#endif
